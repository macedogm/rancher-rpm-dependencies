name: obs-build-pipeline

on:
  push:
    branches:
      - main
  pull_request:
#  # TODO remove
#  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    container: registry.opensuse.org/opensuse/tumbleweed:latest
    steps:
      # TODO remove
      - name: Dumping env
        run: env && echo $HOME
#
      # TODO remove
      - name: Dumping GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # This is a workaround needed for the .git dir to be available inside the container
      # See https://github.com/actions/checkout/issues/335
      - name: Installing Git
        run: |
          zypper in -y git-core
          git config --global --add safe.directory $(pwd)

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          clean: false

      - name: DEBUG
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          pwd
          ls -lha
          whoami
          chmod 600 $HOME/.gitconfig
          git config --global user.name "your username"
          git config --global user.password $GITHUB_TOKEN
          ls -lha
          ls -lha $HOME
          mkdir -m 700 $HOME/.ssh
          ssh-keyscan -t rsa github.com >> $HOME/.ssh/known_hosts
          cat $HOME/.ssh/known_hosts
          cat $HOME/.gitconfig
          git clone https://username:$GITHUB_TOKNE@github.com/macedogm/rancher-rpm-dependencies.git

      - name: Installing OSC
        run: |
          zypper in -y git-core python311-packaging obs-service-go_modules obs-service-recompress obs-service-set_version obs-service-tar_scm osc

      - name: Configuring OSC
        env:
          OBS_USER: ${{ secrets.OBS_USER }}
          OBS_PASS: ${{ secrets.OBS_PASS }}
        run: |
          mkdir -m 700 -p "${HOME}/.config/osc"
          sed "s/OBS_USER/$OBS_USER/;s/OBS_PASS/$OBS_PASS/" rancher/oscrc > "${HOME}/.config/osc/oscrc"
          chmod 600 "${HOME}/.config/osc/oscrc"

      - name: Building packages
#        env:
#          GH_TOKEN: ${{ github.token }}
#        run: export _BRANCH=${{ github.head_ref }} && ./scripts/obs_build_packages.sh
        run: ./scripts/obs_build_packages.sh

      - name: Removing OSC config
        run: rm -rf .oscrc .osc

